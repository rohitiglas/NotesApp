// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App screen renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#66CCCC",
        "fontSize": 26,
        "fontWeight": "700",
        "marginBottom": 20,
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#fff",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 60,
        "width": "90%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Search"
      rejectResponderTermination={true}
      status="info"
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 20,
          "color": "#2c3e50",
          "fontSize": 20,
          "height": 50,
          "marginBottom": 20,
          "padding": 10,
          "paddingTop": 20,
          "textAlignVertical": "top",
          "width": "80%",
        }
      }
      textStyle={
        Object {
          "color": "#000",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000",
          "borderRadius": 25,
          "display": "none",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 20,
          "top": 12,
          "width": 30,
        }
      }
      testID="close-search-button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        X
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
    testID="loader"
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 30,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      +
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
            testID="button-text"
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`App screen should close Add/Edit Modal when you click closeButton 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#66CCCC",
        "fontSize": 26,
        "fontWeight": "700",
        "marginBottom": 20,
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#fff",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 60,
        "width": "90%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Search"
      rejectResponderTermination={true}
      status="info"
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 20,
          "color": "#2c3e50",
          "fontSize": 20,
          "height": 50,
          "marginBottom": 20,
          "padding": 10,
          "paddingTop": 20,
          "textAlignVertical": "top",
          "width": "80%",
        }
      }
      textStyle={
        Object {
          "color": "#000",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000",
          "borderRadius": 25,
          "display": "none",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 20,
          "top": 12,
          "width": 30,
        }
      }
      testID="close-search-button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        X
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#FAFEFF",
        "paddingTop": 0,
      }
    }
    testID="list-view"
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      data={
        Array [
          Object {
            "body": "Bansal",
            "id": "10",
            "title": "Rohit",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingBottom": 100,
        }
      }
      testID="list-data"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#66CCCC",
                  "borderRadius": 5,
                  "color": "#fff",
                  "elevation": 10,
                  "margin": 20,
                  "minHeight": 150,
                  "opacity": 1,
                  "paddingRight": 20,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 5,
                    "width": 0,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 5,
                  "width": 150,
                }
              }
              testID="note-item"
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 25,
                    "fontWeight": "bold",
                    "left": 10,
                    "top": 10,
                  }
                }
                testID="title"
              >
                Rohit
              </Text>
              <Text
                numberOfLines={6}
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 12,
                    "left": 10,
                    "top": 10,
                  }
                }
                testID="description"
              >
                Bansal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 30,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      +
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
            testID="button-text"
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`App screen should show Alert message on Edit/Add notes page when title and description empty on Add Note button click 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#66CCCC",
        "fontSize": 26,
        "fontWeight": "700",
        "marginBottom": 20,
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#fff",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 60,
        "width": "90%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Search"
      rejectResponderTermination={true}
      status="info"
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 20,
          "color": "#2c3e50",
          "fontSize": 20,
          "height": 50,
          "marginBottom": 20,
          "padding": 10,
          "paddingTop": 20,
          "textAlignVertical": "top",
          "width": "80%",
        }
      }
      textStyle={
        Object {
          "color": "#000",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000",
          "borderRadius": 25,
          "display": "none",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 20,
          "top": 12,
          "width": 30,
        }
      }
      testID="close-search-button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        X
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 30,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      X
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
          value=""
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
            testID="button-text"
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`App screen should show Edit/Add notes page when Add button click 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#66CCCC",
        "fontSize": 26,
        "fontWeight": "700",
        "marginBottom": 20,
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#fff",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 60,
        "width": "90%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Search"
      rejectResponderTermination={true}
      status="info"
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 20,
          "color": "#2c3e50",
          "fontSize": 20,
          "height": 50,
          "marginBottom": 20,
          "padding": 10,
          "paddingTop": 20,
          "textAlignVertical": "top",
          "width": "80%",
        }
      }
      textStyle={
        Object {
          "color": "#000",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000",
          "borderRadius": 25,
          "display": "none",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 20,
          "top": 12,
          "width": 30,
        }
      }
      testID="close-search-button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        X
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#FAFEFF",
        "paddingTop": 0,
      }
    }
    testID="list-view"
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      data={
        Array [
          Object {
            "body": "Bansal",
            "id": "10",
            "title": "Rohit",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingBottom": 100,
        }
      }
      testID="list-data"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#66CCCC",
                  "borderRadius": 5,
                  "color": "#fff",
                  "elevation": 10,
                  "margin": 20,
                  "minHeight": 150,
                  "opacity": 1,
                  "paddingRight": 20,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 5,
                    "width": 0,
                  },
                  "shadowOpacity": 1,
                  "shadowRadius": 5,
                  "width": 150,
                }
              }
              testID="note-item"
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 25,
                    "fontWeight": "bold",
                    "left": 10,
                    "top": 10,
                  }
                }
                testID="title"
              >
                Rohit
              </Text>
              <Text
                numberOfLines={6}
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 12,
                    "left": 10,
                    "top": 10,
                  }
                }
                testID="description"
              >
                Bansal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 30,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      +
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
          value="My Notes"
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
          value="This is my First Note"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
            testID="button-text"
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`App screen should show error when Add Note Api called 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#66CCCC",
        "fontSize": 26,
        "fontWeight": "700",
        "marginBottom": 20,
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#fff",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 60,
        "width": "90%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="Search"
      rejectResponderTermination={true}
      status="info"
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 20,
          "color": "#2c3e50",
          "fontSize": 20,
          "height": 50,
          "marginBottom": 20,
          "padding": 10,
          "paddingTop": 20,
          "textAlignVertical": "top",
          "width": "80%",
        }
      }
      textStyle={
        Object {
          "color": "#000",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000",
          "borderRadius": 25,
          "display": "none",
          "height": 30,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 20,
          "top": 12,
          "width": 30,
        }
      }
      testID="close-search-button"
    >
      <Text
        style={
          Object {
            "color": "#fff",
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        X
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
    testID="loader"
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 30,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      X
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
          value="My Notes"
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
          value="This is my First Note"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
            testID="button-text"
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
