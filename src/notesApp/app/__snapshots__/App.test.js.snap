// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App screen renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#1741db",
        "fontSize": 20,
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
    testID="loader"
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 10,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      +
    </Text>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
        "marginTop": 0,
      }
    }
    testID="list-view"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#d90617",
            "fontSize": 30,
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
        testID="no-notes"
      >
        No Notes available
      </Text>
    </View>
  </RCTSafeAreaView>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`App screen should show Alert message on Edit/Add notes page when title and description empty on Add Note button click 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#1741db",
        "fontSize": 20,
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 10,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      X
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
          value=""
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`App screen should show Edit/Add notes page when button click 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "marginTop": 50,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#1741db",
        "fontSize": 20,
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
    testID="notes-title"
  >
    Notes
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
    testID="loader"
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="large"
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0b43e0",
        "borderColor": "rgba(0,0,0,0.2)",
        "borderRadius": 100,
        "borderWidth": 1,
        "bottom": 10,
        "height": 70,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "width": 70,
        "zIndex": 1,
      }
    }
    testID="add-notes"
  >
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#fff",
          "fontSize": 30,
          "fontWeight": "700",
        }
      }
    >
      X
    </Text>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "#2c3e50",
          "flex": 1,
        }
      }
      testID="add-edit-page"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={100}
          multiline={true}
          numberOfLines={2}
          onChangeText={[Function]}
          placeholder="Title"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 80,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "width": "80%",
            }
          }
          testID="input-title"
          underlineColorAndroid="transparent"
          value="My Notes"
        />
        <TextInput
          allowFontScaling={true}
          maxLength={1000}
          multiline={true}
          numberOfLines={10}
          onChangeText={[Function]}
          placeholder="Body"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 20,
              "color": "#2c3e50",
              "fontSize": 20,
              "height": 200,
              "marginBottom": 20,
              "padding": 10,
              "paddingTop": 20,
              "textAlignVertical": "top",
              "width": "80%",
            }
          }
          testID="input-description"
          underlineColorAndroid="transparent"
          value="This is my First Note"
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#2980b6",
              "borderRadius": 20,
              "opacity": 1,
              "paddingVertical": 15,
              "width": "80%",
            }
          }
          testID="submit-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            Add Note
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "marginTop": 20,
              "opacity": 1,
              "position": "absolute",
              "right": 20,
              "top": 40,
              "width": 50,
            }
          }
          testID="close-button"
        >
          <Text
            style={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          >
            X
          </Text>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
